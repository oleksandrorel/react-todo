{"version":3,"sources":["store/todo.js","store/index.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["ADD","REMOVE","EDIT_TITLE","EDIT_STATUS","EDIT_ALL_STATUSES","CLEAR_COMPLETED","actions","todo","type","value","storageTodos","localStorage","getItem","initialGoods","JSON","parse","store","createStore","state","action","filter","id","map","title","completed","getTodos","TodoItem","dispatch","useDispatch","useState","editTodoId","setEditTodoId","editedTodoValue","setEditedTodoValue","deleteTodo","saveEditedTodo","key","trim","className","classnames","editing","onDoubleClick","onChange","checked","onClick","target","onKeyDown","onBlur","TodoList","todos","useSelector","todosStatus","every","pathname","useLocation","htmlFor","getVisibleTodos","FILTERS","TodosFilter","to","toLowerCase","exact","activeClassName","TodoApp","todoTitle","setTodoTitle","useEffect","setItem","stringify","onSubmit","e","preventDefault","newTodo","Date","name","placeholder","length","todoEl","el","hidden","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76fc5f21.chunk.js","sourcesContent":["const ADD = 'todo/ADD';\nconst REMOVE = 'todo/REMOVE';\nconst EDIT_TITLE = 'todo/EDIT_TITLE';\nconst EDIT_STATUS = 'todo/EDIT_STATUS';\nconst EDIT_ALL_STATUSES = 'todo/EDIT_ALL_STATUSES';\nconst CLEAR_COMPLETED = 'todo/CLEAR_COMPLETED';\n\nexport const actions = {\n  add: (todo) => ({ type: ADD, todo }),\n  remove: (todo) => ({ type: REMOVE, todo }),\n  editTitle: (todo, value) => ({ type: EDIT_TITLE, todo, value }),\n  editStatus: (todo) => ({ type: EDIT_STATUS, todo }),\n  editAllStatuses: (value) => ({ type: EDIT_ALL_STATUSES, value }),\n  clearCompleted: () => ({ type: CLEAR_COMPLETED }),\n};\n\nconst storageTodos = localStorage.getItem('todos');\n\nconst initialGoods = storageTodos === null\n  ? []\n  : JSON.parse(storageTodos || '');\n\nexport const todosReducer = (state = initialGoods, action) => {\n\n  switch (action.type) {\n    case ADD:\n      return [...state, action.todo];\n\n    case REMOVE:\n      return state.filter((todo) => todo.id !== action.todo.id);\n\n    case EDIT_TITLE:\n      return state.map((todo) => ({\n        ...todo,\n        title: todo.id === action.todo.id\n          ? action.value\n          : todo.title,\n      }));\n\n    case EDIT_STATUS:\n      return state.map((todo) => ({\n        ...todo,\n        completed: todo.id === action.todo.id\n          ? !action.todo.completed\n          : todo.completed,\n      }));\n\n    case EDIT_ALL_STATUSES:\n      return state.map((todo) => ({\n        ...todo,\n        completed: action.value,\n      }));\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => !todo.completed)\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { todosReducer } from './todo';\n\nconst store = createStore(todosReducer);\n\nexport const getTodos = (store) => store; \n\nexport default store;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../store/todo';\nimport './TodoItem.scss';\n\nexport const TodoItem = ({ todo }) => {\n  const dispatch = useDispatch();\n\n  const [editTodoId, setEditTodoId] = useState(0);\n  const [editedTodoValue, setEditedTodoValue] = useState(todo.title);\n\n  const deleteTodo = () => {\n    dispatch(actions.remove(todo));\n  };\n\n  const saveEditedTodo = (key) => {\n    if ((!editedTodoValue.trim() && key === 'Enter')\n      || (!editedTodoValue.trim() && key === 'Blur')) {\n      deleteTodo();\n    }\n\n    switch (key) {\n      case 'Escape':\n        return setEditTodoId(0);\n\n      case 'Enter':\n      case 'Blur':\n        dispatch(actions.editTitle(todo, editedTodoValue))\n        setEditedTodoValue(editedTodoValue.trim());\n\n        return setEditTodoId(0);\n\n      default:\n        return todo;\n    }\n  };\n\n  return (\n    <li\n      className={classnames('todo', {\n        completed: todo.completed,\n        editing: todo.id === editTodoId,\n      })}\n      onDoubleClick={\n        () => {\n          setEditTodoId(todo.id);\n        }\n      }\n    >\n      <div className=\"view\">\n        <input\n          onChange={() => {\n            dispatch(actions.editStatus(todo))\n          }}\n          type=\"checkbox\"\n          checked={todo.completed}\n          className=\"toggle\"\n        />\n        <label\n          className=\"todo_title\"\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteTodo}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={editedTodoValue}\n        onChange={({ target }) => {\n          setEditedTodoValue(target.value);\n        }}\n        onKeyDown={({ key }) => {\n          saveEditedTodo(key);\n        }}\n        onBlur={() => {\n          saveEditedTodo('Blur');\n        }}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TodoItem } from '../TodoItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodos } from '../../store/index';\nimport { actions } from '../../store/todo';\nimport './TodoList.scss'\n\nexport const TodoList = () => {\n  const todos = useSelector(getTodos);\n  const dispatch = useDispatch();\n  const todosStatus = todos.every(todo => todo.completed);\n  const { pathname } = useLocation();\n\n  const changeTodosStatus = (value) => {\n    dispatch(actions.editAllStatuses(value))\n  };\n\n  const getVisibleTodos = () => {\n    switch (pathname) {\n      case '/active':\n        return todos.filter(todo => !todo.completed);\n\n      case '/completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={todosStatus}\n        onChange={() => {\n          changeTodosStatus(!todosStatus);\n        }}\n      />\n      <label className=\"toggle_icon\" htmlFor=\"toggle-all\" />\n\n      <ul className=\"todo_list\">\n        {getVisibleTodos().map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './TodosFilter.scss';\n\nconst FILTERS = ['All', 'Active', 'Completed'];\n\nexport const TodosFilter = () => (\n  <ul className=\"filters\">\n    {FILTERS.map(filter => (\n      <li key={filter} className=\"filter\">\n        <NavLink\n          className=\"filter_link\"\n          to={filter === 'All' ? '/' : `/${filter.toLowerCase()}`}\n          exact\n          activeClassName=\"filter_link--selected\"\n        >\n          {filter}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from '../TodoList';\nimport { TodosFilter } from '../TodosFilter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodos } from '../../store/index';\nimport { actions } from '../../store/todo';\nimport './TodoApp.scss';\n\nexport const TodoApp = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const todos = useSelector(getTodos);\n  const dispatch = useDispatch();\n\n  const handleTodoChange = ({ target }) => {\n    const { value } = target;\n\n    setTodoTitle(value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (!todoTitle.trim()) {\n      setTodoTitle('');\n      return;\n    }\n\n    const newTodo = {\n      id: +new Date(),\n      title: todoTitle.trim(),\n      completed: false,\n    };\n\n    dispatch(actions.add(newTodo));\n    setTodoTitle('');\n  };\n\n  const clearCompleted = () => {\n    dispatch(actions.clearCompleted());\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <section className=\"todoapp\">\n        <h1 className=\"todoapp_title\">React Todo List</h1>\n      <header className=\"header\">\n        <form onSubmit={handleFormSubmit}>\n          <input\n            className=\"header_input\"\n            value={todoTitle}\n            onChange={handleTodoChange}\n            name=\"todoItem\"\n            type=\"text\"\n            placeholder=\"What needs to do?\"\n          />\n        </form>\n        {todos.length > 0\n          && (\n            <>\n              <TodoList />\n              <footer className=\"footer\">\n                <span className=\"todo-count\">\n                  {todos.filter(todoEl => !todoEl.completed).length === 1\n                    ? `${todos.filter(el => !el.completed).length} item left`\n                    : `${todos.filter(el => !el.completed).length} items left`}\n                </span>\n\n                <TodosFilter />\n\n                <button\n                  type=\"button\"\n                  className=\"clear-completed\"\n                  hidden={!todos.some(todoEl => todoEl.completed)}\n                  onClick={clearCompleted}\n                >\n                  Clear completed\n                </button>\n\n              </footer>\n            </>\n          )\n        }\n      </header>\n\n    </section>\n\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport './helpers/reset.scss';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}